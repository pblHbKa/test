&НаКлиенте
Перем ТекущиеПомещаемыеФайлы;

//////////////////////////////////////////////////////////////////////////////// 
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

// Функция извлекает из отбора формы списка значение элемента "владелец"
// 
// Возвращаемое значение: 
// СправочникСсылка.Товары, либо Неопределено, если владелец не найден
&НаКлиенте
Функция ПолучитьЗначениеВладельца()
	
	Для каждого Элемент из Список.Отбор.Элементы Цикл
		
		Если ТипЗнч(Элемент) =  Тип("ЭлементОтбораКомпоновкиДанных")
			 И (Строка(Элемент.ЛевоеЗначение) = "Владелец"
				ИЛИ Строка(Элемент.ЛевоеЗначение) = "Owner")
			 И Элемент.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			 
			Возврат Элемент.ПравоеЗначение;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

// Процедура получает список файлов, которые переданы на сервер и создает соответствующие элементы справочника
&НаСервере
Процедура СоздатьЭлементыСправочника(ДанныеЗагруженныхФайлов, Владелец)
	
	Для каждого ЗагруженныйФайл Из ДанныеЗагруженныхФайлов Цикл
		
		Файл = Новый Файл(ЗагруженныйФайл.ПолноеИмяФайла);
		ХранимыйФайл = Справочники.ХранимыеФайлы.СоздатьЭлемент();
		ХранимыйФайл.Владелец = Владелец;
		ХранимыйФайл.Наименование = Файл.Имя;
		ХранимыйФайл.ИмяФайла = Файл.Имя;
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ЗагруженныйФайл.АдресВХранилище);
		ХранимыйФайл.ДанныеФайла = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных());
		ХранимыйФайл.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

// Функция формирует массив описаний передаваемых файлов по выделенным строкам списка
&НаКлиенте
Функция ОписаниеВыделенныхФайлов()
	
	ПередаваемыеФайлы = Новый Массив;
	Для каждого Строка Из Элементы.Список.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(Строка);
		Ссылка = ПолучитьНавигационнуюСсылку(Строка, "ДанныеФайла");
		ПутьКфайлу = ДанныеСтроки.Код + "\" + ДанныеСтроки.ИмяФайла;
		Описание = Новый ОписаниеПередаваемогоФайла(ПутьКфайлу, Ссылка);
		ПередаваемыеФайлы.Добавить(Описание);
		
	КонецЦикла;
	
	Возврат ПередаваемыеФайлы;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////// 
// ОБРАБОТЧИКИ СОБЫТИЙ 
// 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТекущиеПомещаемыеФайлы = Новый Соответствие();
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////// 
// Обработчики команд
//

&НаКлиенте
Процедура ЗагрузитьФайлы()
	ПослеПодключенияРасширения = Новый ОписаниеОповещения("ЗагрузитьФайлыПослеПодключенияРасширения", ЭтотОбъект);
	НачатьПодключениеРасширенияРаботыСФайлами(ПослеПодключенияРасширения);  	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлыПослеПодключенияРасширения(Подключено, Параметры) Экспорт
	
	Если Подключено Тогда
		
		Форма = ПолучитьФорму("Справочник.ХранимыеФайлы.Форма.ФормаЗагрузкиФайлов");
		Форма.Владелец = ПолучитьЗначениеВладельца();
		Форма.ОписаниеОповещенияОЗакрытии =
			Новый ОписаниеОповещения("ЗагрузитьФайлыЗавершение", ЭтотОбъект);
		Форма.Открыть();
		
	Иначе
		ДопПараметры = Новый Структура (); 
		ДопПараметры.Вставить("Владелец", ПолучитьЗначениеВладельца());				
		ПослеПомещенияФайлов = Новый ОписаниеОповещения("ПослеПомещенияФайлов", ЭтотОбъект, ДопПараметры, "ПриОшибкеПомещения", ЭтотОбъект);
		ОХодеПомещенияФайлов = Новый ОписаниеОповещения("ХодПомещенияФайлов", ЭтотОбъект, ДопПараметры);
		ПередПомещенияФайлов = Новый ОписаниеОповещения("ПередПомещениемФайлов", ЭтотОбъект, ДопПараметры);
		ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов("Файлы продукта");
		НачатьПомещениеФайловНаСервер(ПослеПомещенияФайлов, ОХодеПомещенияФайлов, ПередПомещенияФайлов, ПараметрыДиалога);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФайлыЗавершение(Результат, Параметры) Экспорт
	Если Не Результат = Неопределено Тогда
		
		ЗагруженныеФайлы = Новый Массив();
		
		Для Каждого ЗагруженныйФайл Из Результат.СписокЗагруженныхФайлов Цикл
			ДанныеФайла = Новый Структура("ПолноеИмяФайла, АдресВХранилище", ЗагруженныйФайл.Значение.СсылкаНаФайл.Имя, ЗагруженныйФайл.Значение.Адрес);
			ЗагруженныеФайлы.Добавить(ДанныеФайла);
		КонецЦикла;
		
		СоздатьЭлементыСправочника(ЗагруженныеФайлы, Результат.Владелец);
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл()
	
	ПередаваемыеФайлы = ОписаниеВыделенныхФайлов();
	Если ПередаваемыеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ПослеПодключенияРасширения = Новый ОписаниеОповещения("ОткрытьФайл_ПослеПодключенияРасширения", ЭтотОбъект, ПередаваемыеФайлы);
	НачатьПодключениеРасширенияРаботыСФайлами(ПослеПодключенияРасширения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл_ПослеПодключенияРасширения(РасширениеПодключено, ПередаваемыеФайлы) Экспорт
	
	Если РасширениеПодключено Тогда
		ОткрытьФайлыЧерезРасширение(ПередаваемыеФайлы);
	Иначе
		ОткрытьФайлыБезРасширения(ПередаваемыеФайлы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлыБезРасширения(ПередаваемыеФайлы) 
	
	Для каждого Описание Из ПередаваемыеФайлы Цикл
		Фрагменты = СтрРазделить(Описание.Имя, "\");
		ПолучитьФайл(Описание.Хранение, Фрагменты[Фрагменты.ВГраница()]);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлыЧерезРасширение(ПередаваемыеФайлы) 
	
#Если НЕ МобильныйКлиент Тогда
	ПослеВыбораКаталога = Новый ОписаниеОповещения("ПослеВыбораКаталога", ЭтотОбъект, ПередаваемыеФайлы);
	Каталог = РаботаСХранилищемОбщихНастроек.ПолучитьРабочийКаталог();
	Если Каталог = Неопределено ИЛИ Каталог = "" Тогда
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		Диалог.Заголовок = НСтр("ru = 'Выбор каталога временного хранения файлов'", "ru");
		Диалог.Показать(ПослеВыбораКаталога);
	Иначе
		ВыбранныеФайлы = Новый Массив;
		ВыбранныеФайлы.Добавить(Каталог);
		ВыполнитьОбработкуОповещения(ПослеВыбораКаталога, ВыбранныеФайлы);
	КонецЕсли;
#Иначе
	ПослеПолучениеКаталогаВременныхФайлов = Новый ОписаниеОповещения("ПолучениеКаталогаВременныхФайлов", ЭтотОбъект, ПередаваемыеФайлы);
	НачатьПолучениеКаталогаВременныхФайлов(ПослеПолучениеКаталогаВременныхФайлов);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеКаталогаВременныхФайлов(ИмяКаталогаВременныхФайлов, ПередаваемыеФайлы) Экспорт
	
	ВыбранныеФайлы = Новый Массив;
	ВыбранныеФайлы.Добавить(ИмяКаталогаВременныхФайлов);
	ПослеВыбораКаталога(ВыбранныеФайлы, ПередаваемыеФайлы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораКаталога(ВыбранныеФайлы, ПередаваемыеФайлы) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Каталог = ВыбранныеФайлы[0];
#Если НЕ МобильныйКлиент Тогда
	РаботаСХранилищемОбщихНастроек.СохранитьРабочийКаталог(Каталог);
#КонецЕсли
	
	Вызовы = Новый Массив;
	ВызовПолучитьФайлы =  Новый Массив;
	ВызовПолучитьФайлы.Добавить("НачатьПолучениеФайловССервера");
	ВызовПолучитьФайлы.Добавить(ПередаваемыеФайлы);
	Вызовы.Добавить(ВызовПолучитьФайлы);
	Для каждого Описание Из ПередаваемыеФайлы Цикл
		Описание.Имя = Каталог + "\" + Описание.Имя;
		ВызовЗапуститьПриложение =  Новый Массив;
		ВызовЗапуститьПриложение.Добавить("НачатьЗапускПриложения");
		ВызовЗапуститьПриложение.Добавить(Описание.Имя);
		Вызовы.Добавить(ВызовЗапуститьПриложение);
	КонецЦикла;
	
	ПослеЗапросаРазрешенийПользователя = Новый ОписаниеОповещения(
		"ПослеЗапросаРазрешенийПользователя", ЭтотОбъект, ПередаваемыеФайлы);
	НачатьЗапросРазрешенияПользователя(ПослеЗапросаРазрешенийПользователя, Вызовы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапросаРазрешенийПользователя(РазрешенияПолучены, ПередаваемыеФайлы) Экспорт
	
	Если НЕ РазрешенияПолучены Тогда
		Возврат;
	КонецЕсли;
	
	ПослеПолученияФайлов = Новый ОписаниеОповещения("ПослеПолученияФайлов", ЭтотОбъект);
	НачатьПолучениеФайловССервера(ПослеПолученияФайлов, ПередаваемыеФайлы);
КонецПроцедуры

&НаКлиенте
Процедура ПослеПолученияФайлов(ПереданныеФайлы, ДопПараметры) Экспорт
	Если НЕ ПереданныеФайлы=Неопределено Тогда
		Для каждого Описание Из ПереданныеФайлы Цикл
			ПослеЗапускаПриложения = Новый ОписаниеОповещения(
				"ПослеЗапускаПриложения", ЭтотОбъект, Описание.ПолноеИмя);
			НачатьЗапускПриложения(ПослеЗапускаПриложения, Описание.ПолноеИмя);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапускаПриложения(КодВозврата, ИмяПриложения) Экспорт
	; // 
КонецПроцедуры

&НаКлиенте
Процедура СписокПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;  	
	ПомещаемыеФайлы = Новый Массив;
	ПеретаскиваемоеЗначение = ПараметрыПеретаскивания.Значение;	
	Если ТипЗнч(ПеретаскиваемоеЗначение) = Тип("СсылкаНаФайл") Тогда 		
		ПомещаемыеФайлы.Добавить(ПеретаскиваемоеЗначение); 		
	ИначеЕсли ТипЗнч(ПеретаскиваемоеЗначение) = Тип("Массив") Тогда		
		Для Каждого ПеретаскиваемыйЭлемент Из ПеретаскиваемоеЗначение Цикл
			Если ТипЗнч(ПеретаскиваемыйЭлемент) = Тип("СсылкаНаФайл") Тогда 				
				ПомещаемыеФайлы.Добавить(ПеретаскиваемыйЭлемент);   				
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
	
	Если ПомещаемыеФайлы.Количество() > 0 Тогда
		ДопПараметры = Новый Структура (); 
		ДопПараметры.Вставить("Владелец", ПолучитьЗначениеВладельца());				
		ПослеПомещенияФайлов = Новый ОписаниеОповещения("ПослеПомещенияФайлов", ЭтотОбъект, ДопПараметры, "ПриОшибкеПомещения", ЭтотОбъект);
		ОХодеПомещенияФайлов = Новый ОписаниеОповещения("ХодПомещенияФайлов", ЭтотОбъект, ДопПараметры);
		ПередПомещенияФайлов = Новый ОписаниеОповещения("ПередПомещениемФайлов", ЭтотОбъект, ДопПараметры);
		НачатьПомещениеФайловНаСервер(ПослеПомещенияФайлов, ОХодеПомещенияФайлов, ПередПомещенияФайлов, ПомещаемыеФайлы); 		 		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОшибкеПомещения(ИнформацияОбОшибке, СтандартнаяОбработка, ДопПараметры) Экспорт
	СтандартнаяОбработка = Ложь;
	ТекущиеПомещаемыеФайлы.Очистить();
	Элементы.ИндикаторПрогресса.Видимость = Ложь;
	Элементы.СообщениеОбОшибке.Видимость = Истина;
	СообщениеОбОшибке = ИнформацияОбОшибке.Описание;	
КонецПроцедуры

&НаКлиенте
Процедура ПередПомещениемФайлов(ПомещаемыеФайлы, ОтказОтПомещенияВсехФайлов, ДопПараметры) Экспорт 
	Для Каждого Файл Из ПомещаемыеФайлы Цикл
		ТекущиеПомещаемыеФайлы.Вставить(Файл.ИдентификаторФайла, 0);
	КонецЦикла;
	ИндикаторПрогресса = ПолучитьОбщийПрогесс();
	Элементы.ИндикаторПрогресса.Видимость = Истина;
	Элементы.СообщениеОбОшибке.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ХодПомещенияФайлов(ПомещаемыйФайл, Помещено, ОтказОтПомещенияФайла, ПомещеноВсего, ОтказОтПомещенияВсехФайлов, ДопПараметры) Экспорт	
	ТекущиеПомещаемыеФайлы[ПомещаемыйФайл.ИдентификаторФайла] = Помещено;
	ИндикаторПрогресса = ПолучитьОбщийПрогесс();                                	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПомещенияФайлов(ПомещенныеФайлы, ДопПараметры) Экспорт  	
	Если ПомещенныеФайлы = Неопределено Или ПомещенныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 	
	Файлы = Новый Массив();	
	Для Каждого Файл из ПомещенныеФайлы Цикл
		ТекущиеПомещаемыеФайлы.Удалить(Файл.СсылкаНаФайл.ИдентификаторФайла);
		Если Не Файл.ПомещениеФайлаОтменено Тогда
		  	ПереданныйФайл = Новый Структура;
		  	ПереданныйФайл.Вставить("Имя", Файл.СсылкаНаФайл.Имя);
		  	ПереданныйФайл.Вставить("Адрес", Файл.Адрес);		  
		  	Файлы.Добавить(ПереданныйФайл);
		КонецЕсли;
	КонецЦикла; 	
	Если ТекущиеПомещаемыеФайлы.Количество() = 0 Тогда
		ПоказатьЗавершениеЗагрузки();
	КонецЕсли;
	Попытка
		ПослеПомещенияФайловНаСервере(Файлы, ДопПараметры);
		Элементы.Список.Обновить();	
	Исключение
		ОбработкаОшибок.ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
	КонецПопытки;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПослеПомещенияФайловНаСервере(ПомещенныеФайлы, ДопПараметры)	
	Для каждого Файл Из ПомещенныеФайлы Цикл		
		ХранимыйФайл = Справочники.ХранимыеФайлы.СоздатьЭлемент();
		ХранимыйФайл.Владелец = ДопПараметры.Владелец;
		ХранимыйФайл.Наименование = Файл.Имя;
		ХранимыйФайл.ИмяФайла = Файл.Имя;
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(Файл.Адрес);
		ХранимыйФайл.ДанныеФайла = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных());
		ХранимыйФайл.Записать();		
	КонецЦикла;		
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЗавершениеЗагрузки() Экспорт        		
	ПодключитьОбработчикОжидания("СкрытьИндикаторПрогресса", 1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СкрытьИндикаторПрогресса() Экспорт        		
	Элементы.ИндикаторПрогресса.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОбщийПрогесс()
	Количество = ТекущиеПомещаемыеФайлы.Количество();
	Если Количество = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Сумма = 0;
	Для Каждого ТекущийПомещаемыеФайлы Из ТекущиеПомещаемыеФайлы Цикл
		Сумма = Сумма + ТекущийПомещаемыеФайлы.Значение;
	КонецЦикла;
	
	Возврат Сумма / Количество;
КонецФункции

&НаКлиенте
Процедура СкачатьАрхивом(Команда)
	Файлы = Новый Массив();	
	Для каждого Строка Из Элементы.Список.ВыделенныеСтроки Цикл		
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(Строка);
		Файл = Новый ОписаниеПередаваемогоФайла();
		Файл.Имя = ДанныеСтроки.ИмяФайла;
		Файл.Хранение = ПолучитьНавигационнуюСсылку(Строка, "ДанныеФайла");
		Файлы.Добавить(Файл);		
	КонецЦикла;	
	ПараметрыАрхива = Новый ПараметрыПолученияАрхиваФайлов();
	ПараметрыАрхива.Режим = РежимПолученияАрхиваФайлов.ПолучатьАрхивВсегда;
	НачатьПолучениеФайловССервера(Файлы, , ПараметрыАрхива);
КонецПроцедуры




